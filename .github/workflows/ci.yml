name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE*'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.svg'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE*'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.svg'
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday
  workflow_dispatch:

# Cancel old runs for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Skip duplicate actions to save resources
  skip-check:
    name: Skip Duplicate Actions
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - name: Skip duplicate actions
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'
          cancel_others: true
          paths_ignore: '["*.md", "docs/**", "LICENSE*"]'

  # Quick syntax check
  check:
    name: Check
    needs: skip-check
    if: needs.skip-check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: check-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            check-${{ runner.os }}-
          save-if: ${{ github.ref == 'refs/heads/main' }}
          cache-on-failure: true

      - name: Check workspace
        run: cargo check --workspace --all-targets --all-features

  # Code formatting check
  fmt:
    name: Rustfmt
    needs: skip-check
    if: needs.skip-check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all --check

  # Linting with clippy
  clippy:
    name: Clippy
    needs: skip-check
    if: needs.skip-check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: clippy-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-${{ runner.os }}-
            check-${{ runner.os }}-
          save-if: ${{ github.ref == 'refs/heads/main' }}
          cache-on-failure: true

      - name: Run clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  # Additional code quality checks
  quality:
    name: Additional Quality Checks
    needs: skip-check
    if: needs.skip-check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Check typos
        uses: crate-ci/typos@master

  # Tests
  test:
    name: Tests
    needs: skip-check
    if: needs.skip-check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: test-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            test-${{ runner.os }}-
          save-if: ${{ github.ref == 'refs/heads/main' }}
          cache-on-failure: true

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Verify nextest installation
        run: |
          # Verify nextest is properly installed
          cargo nextest --version
          echo "âœ… cargo-nextest is ready"

      - name: Run unit tests
        run: |
          # Use nextest for better parallelism and output
          cargo nextest run \
            --workspace \
            --exclude dt-tests \
            --lib --bins \
            --test-timeout 30s \
            --no-fail-fast

      - name: Run doc tests
        run: |
          # Doc tests still use cargo test (nextest doesn't support --doc)
          cargo test --workspace --doc --exclude dt-tests

  # Test coverage
  coverage:
    name: Test Coverage
    needs: skip-check
    if: needs.skip-check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: coverage-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            coverage-${{ runner.os }}-
            test-${{ runner.os }}-
          save-if: ${{ github.ref == 'refs/heads/main' }}
          cache-on-failure: true

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Generate coverage report
        run: |
          # Generate coverage for unit tests only (excluding dt-tests)
          cargo llvm-cov nextest \
            --workspace \
            --exclude dt-tests \
            --lcov \
            --output-path coverage.lcov

          # Generate HTML coverage report
          cargo llvm-cov nextest \
            --workspace \
            --exclude dt-tests \
            --html \
            --output-dir coverage-html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage.lcov
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_number }}
          path: |
            coverage.lcov
            coverage-html/
          retention-days: 30

  # Build verification (cross-platform)
  build:
    name: Build
    needs: [check, fmt, clippy, test]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: build-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            build-${{ runner.os }}-${{ matrix.target }}-
            build-${{ runner.os }}-
          save-if: ${{ github.ref == 'refs/heads/main' }}
          cache-on-failure: true

      - name: Setup cross-compilation
        uses: taiki-e/setup-cross-action@v1

      - name: Build
        run: cross build --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ape-dts-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/dt-main
          retention-days: 7
