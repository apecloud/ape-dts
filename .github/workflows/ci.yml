name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE*'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.svg'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE*'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.svg'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  lint:
    name: Lint & Static Checks
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          # Use a unified cache key to allow sharing across jobs
          key: lint-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting (rustfmt)
        run: cargo fmt --all --check

      - name: Check for typos
        uses: crate-ci/typos@v1.23.0
        continue-on-error: true

      - name: Run Clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
        continue-on-error: true

      - name: Run cargo check
        run: cargo check --workspace --all-targets --all-features

  # Run unit and documentation tests
  test:
    name: Tests
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: test-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            lint-${{ runner.os }}-

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Run unit tests with nextest
        run: |
          cargo nextest run \
            --workspace \
            --exclude dt-tests \
            --lib --bins \
            --no-fail-fast

      - name: Run doc tests
        run: cargo test --workspace --doc --exclude dt-tests

  # Generate test coverage report
  coverage:
    name: Test Coverage
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: coverage-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            test-${{ runner.os }}-
            lint-${{ runner.os }}-

      - name: Install coverage tools
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov, cargo-nextest

      - name: Generate coverage report
        run: |
          cargo llvm-cov nextest \
            --workspace \
            --exclude dt-tests \
            --lcov \
            --output-path coverage.lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.lcov
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Generate HTML coverage report for artifact upload
        run: |
          cargo llvm-cov nextest \
            --workspace \
            --exclude dt-tests \
            --html \
            --output-dir coverage-html

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_number }}
          path: coverage-html/
          retention-days: 7
